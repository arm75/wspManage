@model WSPManage.Models.property

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create New Property</h2>

<div>
    @Html.ActionLink("Back to Properties", "Index")
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <p class="custom-form-section-header">Property Information</p>

        <div class="form-group">
            @Html.LabelFor(model => model.PhysicalAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.PhysicalStreetNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhysicalStreetNumber, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.PhysicalStreetDir, ViewBag.physicalStreetDirDropdownList as IEnumerable<SelectListItem>, "Choose Direction", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PhysicalStreetDir, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.PhysicalStreetName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhysicalStreetName, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.PhysicalUnit, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-1">
                @Html.EditorFor(model => model.PhysicalUnit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhysicalUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhysicalCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.PhysicalCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhysicalCity, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.PhysicalState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.PhysicalState, ViewBag.statesDropdownList as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PhysicalState, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.PhysicalZipcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.PhysicalZipcode, new { htmlAttributes = new { @class = "form-control zipcode-mask" } })
                @Html.ValidationMessageFor(model => model.PhysicalZipcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhysicalCounty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.PhysicalCounty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhysicalCounty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PropertySource, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.PropertySource, ViewBag.businessEntitiesDropdownList as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PropertySource, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.AcquireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.AcquireDate, new { htmlAttributes = new { @class = "form-control date-picker" } })
                @Html.ValidationMessageFor(model => model.AcquireDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.OriginalCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.OriginalCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OriginalCost, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.MarketValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.MarketValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MarketValue, "", new { @class = "text-danger" })
            </div>
        </div>
         
        <div class="form-group">
            @Html.LabelFor(model => model.RentalUnit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RentalUnit)
                    @Html.ValidationMessageFor(model => model.RentalUnit, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.LabelFor(model => model.LegallyAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.LegallyAvailable)
                    @Html.ValidationMessageFor(model => model.LegallyAvailable, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.LabelFor(model => model.PhysicallyAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PhysicallyAvailable)
                    @Html.ValidationMessageFor(model => model.PhysicallyAvailable, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.LabelFor(model => model.WSPOwned, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.WSPOwned)
                    @Html.ValidationMessageFor(model => model.WSPOwned, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <p class="custom-form-section-header">Insurance Information</p>

        <div class="form-group">
            @Html.LabelFor(model => model.InsuranceRequired, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.InsuranceRequired)
                    @Html.ValidationMessageFor(model => model.InsuranceRequired, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.LabelFor(model => model.InsuranceCarrier, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.InsuranceCarrier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsuranceCarrier, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.InsurancePolicy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.InsurancePolicy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsurancePolicy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsurancePolicyExpiration, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.InsurancePolicyExpiration, new { htmlAttributes = new { @class = "form-control date-picker" } })
                @Html.ValidationMessageFor(model => model.InsurancePolicyExpiration, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.WSPLiabilityDateAdded, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WSPLiabilityDateAdded, new { htmlAttributes = new { @class = "form-control date-picker" } })
                @Html.ValidationMessageFor(model => model.WSPLiabilityDateAdded, "", new { @class = "text-danger" })
            </div>
        </div>

        <p class="custom-form-section-header">Financed Property Information</p>

        <div class="form-group">
            @Html.LabelFor(model => model.Lender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Lender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lender, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.LoanNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.LoanNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoanNumber, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.WSPBalanceOwed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WSPBalanceOwed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WSPBalanceOwed, "", new { @class = "text-danger" })
            </div>
        </div>

        <p class="custom-form-section-header">Tax Information</p>

        <div class="form-group">
            @Html.LabelFor(model => model.TaxIDNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.TaxIDNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaxIDNumber, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.LastYearPaid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.LastYearPaid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastYearPaid, "", new { @class = "text-danger" })
            </div>
        </div>
               
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Properties", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
