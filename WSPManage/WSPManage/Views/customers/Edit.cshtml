@model WSPManage.Models.customer

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit customer <b>@Html.ValueFor(model => model.FirstName) @Html.ValueFor(model => model.MiddleName) @Html.ValueFor(model => model.LastName)</b>(#@Html.ValueFor(model => model.customerID))</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <!-- <h4>customer</h4> -->
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.customerID)

        
        <p class="custom-form-section-header">Identity Information</p>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", tabindex = "1" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", tabindex = "2" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", tabindex = "3" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
                
        <div class="form-group">
            @Html.LabelFor(model => model.SSN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.SSN, new { htmlAttributes = new { @class = "form-control ssn-mask", tabindex = "4" } })
                @Html.ValidationMessageFor(model => model.SSN, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.EIN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.EIN, new { htmlAttributes = new { @class = "form-control ein-mask", tabindex = "5" } })
                @Html.ValidationMessageFor(model => model.EIN, "", new { @class = "text-danger" })
            </div>
        </div>
                
        <div class="form-group">
            @Html.LabelFor(model => model.ContractName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.ContractName, new { htmlAttributes = new { @class = "form-control", tabindex = "6" } })
                @Html.ValidationMessageFor(model => model.ContractName, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.AlternateName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.AlternateName, new { htmlAttributes = new { @class = "form-control", tabindex = "7" } })
                @Html.ValidationMessageFor(model => model.AlternateName, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "", tabindex = "8" } })
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <p class="custom-form-section-header">Address Information</p>


        <div class="form-group">
            @Html.LabelFor(model => model.MailingAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.MailingAddress, new { htmlAttributes = new { @class = "form-control", tabindex = "9" } })
                @Html.ValidationMessageFor(model => model.MailingAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MailingCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.MailingCity, new { htmlAttributes = new { @class = "form-control", tabindex = "10" } })
                @Html.ValidationMessageFor(model => model.MailingCity, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.MailingState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.MailingState, ViewBag.statesDropdownList as IEnumerable<SelectListItem>, new { @class = "form-control", tabindex = "11" })
                @* @Html.EditorFor(model => model.MailingState, new { htmlAttributes = new { @class = "form-control", tabindex = "11" } }) *@
                @Html.ValidationMessageFor(model => model.MailingState, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.MailingZipcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.MailingZipcode, new { htmlAttributes = new { @class = "form-control zipcode-mask", tabindex = "12" } })
                @Html.ValidationMessageFor(model => model.MailingZipcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <p class="custom-form-section-header">Contact Information</p>

        <div class="form-group">
            @Html.LabelFor(model => model.HomePhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.HomePhoneNumber, new { htmlAttributes = new { @class = "form-control phone-mask", tabindex = "13" } })
                @Html.ValidationMessageFor(model => model.HomePhoneNumber, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.WorkPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WorkPhoneNumber, new { htmlAttributes = new { @class = "form-control phone-mask", tabindex = "14" } })
                @Html.ValidationMessageFor(model => model.WorkPhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CellPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.CellPhoneNumber, new { htmlAttributes = new { @class = "form-control phone-mask", tabindex = "15" } })
                @Html.ValidationMessageFor(model => model.CellPhoneNumber, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.AlternateNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.AlternateNumber, new { htmlAttributes = new { @class = "form-control phone-mask", tabindex = "16" } })
                @Html.ValidationMessageFor(model => model.AlternateNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <p class="custom-form-section-header">Additional Information</p>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control customer-notes", @rows = "10", tabindex = "17" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.HiddenFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.HiddenFor(model => model.UserCreated, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserCreated, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.HiddenFor(model => model.DateModified, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateModified, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.HiddenFor(model => model.UserModified, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserModified, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" tabindex = "18" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<hr />

<p style="text-align: right;">
Modified on <font color="red">@Html.ValueFor(model => model.DateModified)</font> by <font color="red">@Html.ValueFor(model => model.UserModified)</font> <br />
Created on <font color="red">@Html.ValueFor(model => model.DateCreated)</font> by <font color="red">@Html.ValueFor(model => model.UserCreated)</font>
</p>

<hr />

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
